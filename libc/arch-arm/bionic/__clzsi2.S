
/* Derived from assembly dump of __clzsi2 in libgcc.a
 */

#include <machine/asm.h>

ENTRY(__clzsi2)
#ifndef __ARM_ARCH_5__
	cmp		r0, #0x10000
	bcs		1f
	cmp		r0, #0xff
	movhi	r1, #8
	movls	r1, #0
	b		2f
1:	cmp		r0, #0x1000000
	movcs	r1, #24
	movcc	r1, #16
2:	lsr		r2, r0, r1
	adr		r3, .L_clz_table
	ldrb	r3, [r3, r2]
	rsb		r0, r1, #32
	rsb		r0, r3, r0
	bx		lr

.text;
.type .L_clz_table, _ASM_TYPE_OBJECT;
.L_clz_table:
/*           0  1  2  3  4  5  6  7            */
	.byte	 0, 1, 2, 2, 3, 3, 3, 3 /*   0-  7 */
	.byte	 4, 4, 4, 4, 4, 4, 4, 4 /*   8- 15 */
	.byte	 5, 5, 5, 5, 5, 5, 5, 5 /*  16- 23 */
	.byte	 5, 5, 5, 5, 5, 5, 5, 5 /*  24- 31 */
	.byte	 6, 6, 6, 6, 6, 6, 6, 6 /*  32- 39 */
	.byte	 6, 6, 6, 6, 6, 6, 6, 6 /*  40- 47 */
	.byte	 6, 6, 6, 6, 6, 6, 6, 6 /*  48- 55 */
	.byte	 6, 6, 6, 6, 6, 6, 6, 6 /*  56- 63 */
	.byte	 7, 7, 7, 7, 7, 7, 7, 7 /*  64- 71 */
	.byte	 7, 7, 7, 7, 7, 7, 7, 7 /*  72- 79 */
	.byte	 7, 7, 7, 7, 7, 7, 7, 7 /*  80- 87 */
	.byte	 7, 7, 7, 7, 7, 7, 7, 7 /*  88- 95 */
	.byte	 7, 7, 7, 7, 7, 7, 7, 7 /*  96-103 */
	.byte	 7, 7, 7, 7, 7, 7, 7, 7 /* 104-111 */
	.byte	 7, 7, 7, 7, 7, 7, 7, 7 /* 112-119 */
	.byte	 7, 7, 7, 7, 7, 7, 7, 7 /* 120-127 */
	.byte	 8, 8, 8, 8, 8, 8, 8, 8 /* 128-135 */
	.byte	 8, 8, 8, 8, 8, 8, 8, 8 /* 136-143 */
	.byte	 8, 8, 8, 8, 8, 8, 8, 8 /* 144-151 */
	.byte	 8, 8, 8, 8, 8, 8, 8, 8 /* 152-159 */
	.byte	 8, 8, 8, 8, 8, 8, 8, 8 /* 160-167 */
	.byte	 8, 8, 8, 8, 8, 8, 8, 8 /* 168-175 */
	.byte	 8, 8, 8, 8, 8, 8, 8, 8 /* 176-183 */
	.byte	 8, 8, 8, 8, 8, 8, 8, 8 /* 184-191 */
	.byte	 8, 8, 8, 8, 8, 8, 8, 8 /* 192-199 */
	.byte	 8, 8, 8, 8, 8, 8, 8, 8 /* 200-207 */
	.byte	 8, 8, 8, 8, 8, 8, 8, 8 /* 208-215 */
	.byte	 8, 8, 8, 8, 8, 8, 8, 8 /* 216-223 */
	.byte	 8, 8, 8, 8, 8, 8, 8, 8 /* 224-231 */
	.byte	 8, 8, 8, 8, 8, 8, 8, 8 /* 232-239 */
	.byte	 8, 8, 8, 8, 8, 8, 8, 8 /* 240-247 */
	.byte	 8, 8, 8, 8, 8, 8, 8, 8 /* 248-255 */
#else
	clz		r0, r0
	bx		lr
#endif
